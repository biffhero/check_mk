#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.


factory_settings["avaya_45xx_cpu_default_levels"] = {
    "levels" : (90.0, 95.0)
}

def inventory_avaya_45xx_cpu(info):
    for idx, line in enumerate(info):
        yield str(idx), {}

def check_avaya_45xx_cpu(item, params, info):
    now = time.time()
    for idx, used_perc in enumerate(info):
        if str(idx) == item:
            return check_cpu_util(int(used_perc[0]), params, now)

check_info["avaya_45xx_cpu"] = {
    "check_function":       check_avaya_45xx_cpu,
    "inventory_function":   inventory_avaya_45xx_cpu,
    "service_description":  "CPU utilization CPU %s",
    "group"               : "cpu_utilization_multiitem",
    "has_perfdata":         True,
    "default_levels_variable" : "avaya_45xx_cpu_default_levels",
    # S5-CHASSIS-MIB
    "snmp_info":            ( ".1.3.6.1.4.1.45.1.6.3.8.1.1.5", [ 3 ] ), # CPU
    "snmp_scan_function":   lambda oid: ".1.3.6.1.4.1.45.3" in oid(".1.3.6.1.2.1.1.2.0"),
    "includes":             ["cpu_util.include"],
}
