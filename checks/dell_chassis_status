#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

dell_chassis_status_info = ( ".1.3.6.1.4.1.674.10892.2", [
                                      "1.1.7",  # drsProductURL               0
                                      "1.1.9",  # drsProductChassisLocation   1
                                      "1.1.10", # drsProductChassisName       2
                                      "1.1.11", # drsSystemServiceTag         3
                                      "1.1.15", # drsProductChassisDataCenter 4
                                      "1.2.1",  # drsFirmwareVersion          5
                                      "2.1",  # drsGlobalSystemStatus       6
                              ])

def inventory_dell_chassis_status(info):
    if info:
        return [ ( None, None ) ]

def check_dell_chassis_status(item, _no_params, info):

    whats = [ "URL",
              "Locaction",
              "Name",
              "Service Tag",
              "Data Center",
              "Firmware Version",
              "Status",
    ]

    state_table = {
        "1" : ( "Other, ", 1 ),
        "2" : ( "Unknown, ", 1 ),
        "3" : ( "OK", 0 ),
        "4" : ( "Non-Critical, ", 1 ),
        "5" : ( "Critical, ", 2 ),
        "6" : ( "Non-Recoverable, ", 2 ),
    }

    things = zip(whats, info[0])

    for what, value in things:
        if what == "Status":
            descr, status = state_table[value]
            yield status, what + ": " + descr
        else:
            yield 0, what + ": " + value


check_info["dell_chassis_status"] = {
    "check_function"        : check_dell_chassis_status,
    "inventory_function"    : inventory_dell_chassis_status,
    "service_description"   : "Chassis Health",
    "snmp_info"             : ( ".1.3.6.1.4.1.674.10892.2", [
                                      "1.1.7",  # drsProductURL               0
                                      "1.1.9",  # drsProductChassisLocation   1
                                      "1.1.10", # drsProductChassisName       2
                                      "1.1.11", # drsSystemServiceTag         3
                                      "1.1.15", # drsProductChassisDataCenter 4
                                      "1.2.1",  # drsFirmwareVersion          5
                                      "2.1",  # drsGlobalSystemStatus       6
                              ]),
    "snmp_scan_function"    : lambda oid: oid('.1.3.6.1.2.1.1.2.0') == ".1.3.6.1.4.1.674.10892.2",
}

