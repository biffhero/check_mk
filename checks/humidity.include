#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2015             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.


# old params = (crit_low , warn_low, warn, crit)
def check_humidity(humidity, params):
    if params is None:
        params = {
            "levels_lower" : (-1, -1),
            "levels"       : (101, 101),
        }
    elif type(params) in [ list, tuple ]:
        params = {
            "levels_lower" : (params[0], params[1]),
            "levels"       : (params[2], params[3]),
        }

    crit_lower, warn_lower = params["levels_lower"]
    warn_upper, crit_upper = params["levels"]
    perfdata = [ ("humidity", humidity, warn_upper, crit_upper, 0, 100) ]
    infotext = get_percent_human_readable(humidity)

    levelstext_lower = " (warn/crit below %s/%s)" % (
                        get_percent_human_readable(warn_lower),
                        get_percent_human_readable(crit_lower))
    levelstext_upper = " (warn/crit at %s/%s)" % (
                        get_percent_human_readable(warn_upper),
                        get_percent_human_readable(crit_upper))

    status = 0
    levelstext = ""
    if humidity < crit_lower:
        status = 2
        levelstext = levelstext_lower

    elif humidity >= crit_upper:
        status = 2
        levelstext = levelstext_upper

    elif humidity < warn_lower:
        status = 1
        levelstext = levelstext_lower

    elif humidity >= warn_upper:
        status = 1
        levelstext = levelstext_upper

    if status:
        infotext += levelstext

    return status, infotext, perfdata
