#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.


def inventory_netapp_api_connection(info):
    return [(None, [])]

def check_netapp_api_connection(_no_item, params, info):
    state = 0
    infos = []
    suppressed_warnings = 0
    for line in info:
        line = " ".join(line)
        line_state = 1

        for entry in params:
            if line.startswith(entry.get("name")):
                line_state = entry.get("state")

        if line_state == 0:
            suppressed_warnings += 1
        else:
            infos.append(line)

        state = max(state, line_state)

    if suppressed_warnings:
        infos.append("%d suppressed warning%s by WATO rule" % (suppressed_warnings,
                            suppressed_warnings > 1 and "s" or ""))

    if infos:
        return state, ", ".join(infos)
    else:
        return 0, "The agent was able to retrieve all data from the filer"

check_info['netapp_api_connection'] = {
  "inventory_function"  : inventory_netapp_api_connection,
  "check_function"      : check_netapp_api_connection,
  "service_description" : "NetApp filer connection",
  "group"               : "netapp_instance"
}
