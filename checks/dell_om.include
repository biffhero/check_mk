#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# The OpenManage module attaches itself to the SNMP agent of the
# operating system. We trigger on all Windows and Linux systems.
# This is not optimal but still enough for excluding network
# devices and similar stuff


def scan_dell_om(oid):
    return "Open Manage" in oid(".1.3.6.1.2.1.1.1.0") or \
           "Linux" in oid(".1.3.6.1.2.1.1.1.0") or \
           "Software: Windows" in oid(".1.3.6.1.2.1.1.1.0")


def parse_omreport(info):
    result = {}
    current_obj = {}

    def insert(obj):
        result[obj["ID"]] = obj.copy()
        obj.clear()

    for line in info:
        try:
            idx = line.index(":")
        except ValueError:
            # no colon in the line
            continue
        key = " ".join(line[:idx])
        value = " ".join(line[idx + 1:])
        if key == "ID" and current_obj:
            insert(current_obj)

        current_obj[key] = value

    insert(current_obj)
    return result


def status_translate_omreport(code):
    return {
        "ok"           : 0,
        "non-critical" : 1,
        "critical"     : 2,
        "not found"    : 3
    }.get(code.lower(), 2)

