#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

def inventory_alcatel_fans(info):
    # parameter start in enumerate only works since python 2.6
    for nr, value in enumerate(info):
        yield nr+1, None

def check_alcatel_fans(item, _no_params, info):
    fan_states = {
        0 : "has no status",
        1 : "not running",
        2 : "running",
    }
    for nr, value in enumerate(info):
        if nr+1 == item:
            fan_state = int(value[0])
            state = 0
            if fan_state != 2:
                state = 2
            return state, "Fan " + fan_states[fan_state]

check_info["alcatel_fans"] = {
    "check_function"          : check_alcatel_fans,
    "inventory_function"      : inventory_alcatel_fans,
    "service_description"     : "Fan %s",
    "snmp_scan_function"      : lambda oid: oid(".1.3.6.1.2.1.1.2.0").startswith(".1.3.6.1.4.1.6486.800"),
    "snmp_info"               : (".1.3.6.1.4.1.6486.800.1.1.1.3.1.1.11.1", [ 2 ]),
}
