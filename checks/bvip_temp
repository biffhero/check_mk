#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2013             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

factory_settings["bvip_temp_default_levels"] = {
    "levels": (50, 60)
}

def inventory_bvip_temp(info):
    for line in info:
        # line[0] contains nice names like "CPU" and "System"
        yield line[0], {}

def check_bvip_temp(item, params, info):
    for nr, value in info:
        if nr == item:
            degree_celsius = float(value) / 10
            return check_temperature(degree_celsius, params, "bvip_temp_%s" % item)

check_info["bvip_temp"] = {
    "check_function"         : check_bvip_temp,
    "inventory_function"     : inventory_bvip_temp,
    "default_levels_variable": "bvip_temp_default_levels",
    "service_description"    : "Temperature %s",
    "snmp_scan_function"     : bvip_scan_function,
    "snmp_info"              : (".1.3.6.1.4.1.3967.1.1.7.1", [OID_END, 1 ]),
    "includes"               : [ 'bvip.include', 'temperature.include' ],
    "has_perfdata"           : True,
    "group"                  : "temperature",
}

