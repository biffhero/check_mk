#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.


def inventory_avaya_45xx_fan(info):
    for idx, line in enumerate(info):
        yield str(idx), {}

def check_avaya_45xx_fan(item, params, info):
    state_map = {
        "1": ("Other", 3),
        "2": ("Not available", 3),
        "3": ("Removed", 0),
        "4": ("Disabled", 0),
        "5": ("Normal", 0),
        "6": ("Reset in Progress", 1),
        "7": ("Testing", 1),
        "8": ("Warning", 1),
        "9": ("Non fatal error", 1),
        "10": ("Fatal error", 2),
        "11": ("Not configured", 1),
        "12": ("Obsoleted", 0),
    }

    for idx, fan_status in enumerate(info):
        if str(idx) == item:
            text, state = state_map.get(fan_status[0], ("Unknown", 3))
            return state, text

check_info["avaya_45xx_fan"] = {
    'check_function':       check_avaya_45xx_fan,
    'inventory_function':   inventory_avaya_45xx_fan,
    'service_description':  'Fan Chassis %s',
    'has_perfdata':         True,
    # S5-CHASSIS-MIB
    'snmp_info':            ( '.1.3.6.1.4.1.45.1.6.3.3.1.1.10', [ 6 ] ), # FanOperState
    'snmp_scan_function':   lambda oid: ".1.3.6.1.4.1.45.3" in oid(".1.3.6.1.2.1.1.2.0"),
}
