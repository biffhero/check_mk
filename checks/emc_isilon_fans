#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

factory_settings["emc_isilon_fan_default_levels"] = {
    "lower" : (3000, 2500)
}


# Examples for sensor names:
# Chassis Fan1 (ISI F1) --> Chassis 1
# Chassis Fan2 (ISI F2)
# Chassis Fan3 (ISI F3)
# Power Supply 1 Fan1 --> Power Supply 1 1
# Power Supply 2 Fan1
def isilon_fan_item_name(sensor_name):
    return sensor_name.replace("Fan", "").split("(")[0].strip()


def inventory_emc_isilon_fans(info):
    for fan_name, value in info:
        yield isilon_fan_item_name(fan_name), {}


def check_emc_isilon_fans(item, params, info):
    for fan_name, value in info:
        if item == isilon_fan_item_name(fan_name):
            return check_fan(float(value), params)


check_info["emc_isilon_fans"] = {
    'check_function'          : check_emc_isilon_fans,
    'inventory_function'      : inventory_emc_isilon_fans,
    'service_description'     : 'Fan %s',
    'snmp_info'               : ( '.1.3.6.1.4.1.12124.2.53.1', [
                                   3, # ISILON-MIB::fanDescription,
                                   4, # ISILON-MIB::fanSpeed,
                                ]),
    'snmp_scan_function'      : lambda oid: "isilon" in oid('.1.3.6.1.2.1.1.1.0').lower(),
    'has_perfdata'            : True,
    'group'                   : "hw_fans",
    'default_levels_variable' : "emc_isilon_fan_default_levels",
    'includes'                : [ 'fan.include' ],
}
