#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# <<<websphere_mq_channels>>>
# 0   CHANNEL(C000052.C000051)  5000  Unknown
# 0   CHANNEL(C000052.CATSOS.03)  5000  RUNNING
# 0   CHANNEL(C000052.DXUZ001)  5000  RUNNING
# 0   CHANNEL(C000052.N000011)  5000  RUNNING
# 0   CHANNEL(C000052.SI0227450.T1)  10000  RUNNING
# 0   CHANNEL(C000052.SOX10.T1)  10000  STOPPED
# 0   CHANNEL(C000052.SV1348520.T1)  5000  RUNNING
# 0   CHANNEL(C000052.SV2098742.T1)  5000  Unknown


websphere_mq_channels_default_levels = {
    'message_count': ( 900, 1000 ),
    'status': {
        'RUNNING': 0,
        'STOPPED': 1
    }
}


def inventory_websphere_mq_channels(info):
    return [ ( x[1], 'websphere_mq_channels_default_levels' ) for x in info ]


def check_websphere_mq_channels(item, params, info):
    if isinstance(params, tuple):
        params = {
            'message_count' : params,
            'status'        : websphere_mq_channels_default_levels['status'],
        }

    for messages, channel, max_messages, status in info:
        if channel == item:
            messages     = saveint(messages)
            max_messages = saveint(max_messages)
            infotext     = "%d/%d messages" % (messages, max_messages)
            state        = 0

            if params['message_count']:
                warn, crit = params['message_count']
                if messages >= crit:
                    state = 2
                elif messages >= warn:
                    state = 1
                if state:
                    infotext += " (warn crit at %d/%d messages)" % (warn, crit)
            else:
                warn, crit = (None, None)

            yield state, infotext, [('messages', messages, warn, crit, 0, max_messages)]

            state = params['status'].get(status, params['status'].get('other', 2))
            yield state, "Channel status: %s" % status, []


check_info["websphere_mq_channels"] = {
    "inventory_function"    : inventory_websphere_mq_channels,
    "check_function"        : check_websphere_mq_channels,
    "service_description"   : "MQ Channel %s",
    "has_perfdata"          : True,
    "group"                 : "websphere_mq",
}
