#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2015             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.


def parse_fortigate_sslvpn(info):
    return map(lambda i: i[0] + i[1], zip(info[0], info[1]))


def inventory_fortigate_sslvpn(info):
    for name, idx, state, users, web_sessions, tunnels, tunnels_max in info:
        yield name, None


def check_fortigate_sslvpn(item, _no_params, info):
    fn_bool_state = {
        "1": "disabled",
        "2": "enabled"
    }
    for name, idx, state, users, web_sessions, tunnels, tunnels_max in info:
        if name == item:
            infotext = "%s - users %s, web sessions %s, tunnels %s" %\
                (fn_bool_state[state], users, web_sessions, tunnels)

            perfdata = [("active_vpn_users",       users),
                        ("active_vpn_websessions", web_sessions),
                        ("active_vpn_tunnels",     tunnels, '', '', 0, tunnels_max)]
            return 0, infotext, perfdata


check_info["fortigate_sslvpn"] = {
    "inventory_function"  : inventory_fortigate_sslvpn,
    "check_function"      : check_fortigate_sslvpn,
    "parse_function"      : parse_fortigate_sslvpn,
    "service_description" : "VPN SSL %s",
    "has_perfdata"        : True,
    "snmp_scan_function"  : lambda oid: ".1.3.6.1.4.1.12356.101.1" in oid(".1.3.6.1.2.1.1.2.0"),
    "snmp_info"           : [
        (".1.3.6.1.4.1.12356.101.3.2.1.1", [2]),
        (".1.3.6.1.4.1.12356.101.12.2.3.1", [OID_END,
                                             1,  # fgVpnSslState
                                             2,  # fgVpnSslStatsLoginUsers
                                             4,  # fgVpnSslStatsActiveWebSessions
                                             6,  # fgVpnSslStatsActiveTunnels
                                             7,  # fgVpnSslStatsMaxTunnels
                                             ]),
    ]
}

