#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2015             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# example:
# 1001 stack member and master
# 2001 stack member
# 3001 stack member
# 4001 stack member

# .1.3.6.1.4.1.9.9.500.1.3.2.1.7.1001.0 Port 1 --> CISCO-STACKWISE-MIB::cswStackPowerPortName.1001.0
# .1.3.6.1.4.1.9.9.500.1.3.2.1.7.1001.1 Port 2 --> CISCO-STACKWISE-MIB::cswStackPowerPortName.1001.1
# .1.3.6.1.4.1.9.9.500.1.3.2.1.7.2001.0 Port 1 --> CISCO-STACKWISE-MIB::cswStackPowerPortName.2001.0
# .1.3.6.1.4.1.9.9.500.1.3.2.1.7.2001.1 Port 2 --> CISCO-STACKWISE-MIB::cswStackPowerPortName.2001.1
# .1.3.6.1.4.1.9.9.500.1.3.2.1.7.3001.0 Port 1 --> CISCO-STACKWISE-MIB::cswStackPowerPortName.3001.0
# .1.3.6.1.4.1.9.9.500.1.3.2.1.7.3001.1 Port 2 --> CISCO-STACKWISE-MIB::cswStackPowerPortName.3001.1
# .1.3.6.1.4.1.9.9.500.1.3.2.1.7.4001.0 Port 1 --> CISCO-STACKWISE-MIB::cswStackPowerPortName.4001.0
# .1.3.6.1.4.1.9.9.500.1.3.2.1.7.4001.1 Port 2 --> CISCO-STACKWISE-MIB::cswStackPowerPortName.4001.1

# .1.3.6.1.4.1.9.9.500.1.3.2.1.5.1001.0 1 --> CISCO-STACKWISE-MIB::cswStackPowerPortLinkStatus.1001.0
# .1.3.6.1.4.1.9.9.500.1.3.2.1.5.1001.1 1 --> CISCO-STACKWISE-MIB::cswStackPowerPortLinkStatus.1001.1
# .1.3.6.1.4.1.9.9.500.1.3.2.1.5.2001.0 1 --> CISCO-STACKWISE-MIB::cswStackPowerPortLinkStatus.2001.0
# .1.3.6.1.4.1.9.9.500.1.3.2.1.5.2001.1 1 --> CISCO-STACKWISE-MIB::cswStackPowerPortLinkStatus.2001.1
# .1.3.6.1.4.1.9.9.500.1.3.2.1.5.3001.0 1 --> CISCO-STACKWISE-MIB::cswStackPowerPortLinkStatus.3001.0
# .1.3.6.1.4.1.9.9.500.1.3.2.1.5.3001.1 1 --> CISCO-STACKWISE-MIB::cswStackPowerPortLinkStatus.3001.1
# .1.3.6.1.4.1.9.9.500.1.3.2.1.5.4001.0 1 --> CISCO-STACKWISE-MIB::cswStackPowerPortLinkStatus.4001.0
# .1.3.6.1.4.1.9.9.500.1.3.2.1.5.4001.1 1 --> CISCO-STACKWISE-MIB::cswStackPowerPortLinkStatus.4001.1


def inventory_cisco_stackpower(info):
    return [ ("%s %s" % (oid.split(".")[0], port_name), None) \
             for oid, port_name, port_status in info ]


def check_cisco_stackpower(item, params, info):
    map_status = {
        "1" : (0, "connected and operational"),
        "2" : (2, "forced down or not connected"),
    }
    for oid, port_name, port_status in info:
        if "%s %s" % (oid.split(".")[0], port_name) == item:
            state, state_readable = map_status[port_status]
            return state, "link status: %s" % state_readable


check_info['cisco_stackpower'] = {
    'inventory_function'        : inventory_cisco_stackpower,
    'check_function'            : check_cisco_stackpower,
    'service_description'       : 'Stackpower Interface %s',
    'snmp_info'                 : (".1.3.6.1.4.1.9.9.500.1.3.2.1", [
                                        OID_END,
                                        "7",    # cswStackPowerPortName
                                        "5",    # cswStackPowerPortLinkStatus
                                  ]),
    'snmp_scan_function'        : lambda oid: oid(".1.3.6.1.2.1.1.2.0").startswith(".1.3.6.1.4.1.9.1.516"),
}
