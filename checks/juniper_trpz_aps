#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

def inventory_juniper_trpz_aps(info):
    return [ (None, None) ]

def check_juniper_trpz_aps(_no_item, _no_params, info):
    total_aps = 0
    total_sessions = 0
    message = ""
    for node, aps, sessions in info:
        # Are we a cluster?
        if node != None:
            message += "%s: " % node

        total_aps += int(aps)
        total_sessions += int(sessions)
        message += "%s access points online, %s sessions - " % (aps, sessions)

    if message.endswith(' - '):
        message = message[:-3]

    if len(info) > 1:
        infotext = "Total: %d access points, %d sessions (%s)" % (total_aps, total_sessions, message)
    else:
        infotext = message

    return 0, infotext, [ ('ap_devices_total', total_aps), ("total_sessions", total_sessions) ]

check_info["juniper_trpz_aps"] = {
    "check_function"        : check_juniper_trpz_aps,
    "inventory_function"    : inventory_juniper_trpz_aps,
    "service_description"   : "Access Points",
    "node_info"             : True,
    "has_perfdata"          : True,
    "snmp_scan_function"    : lambda oid: oid(".1.3.6.1.2.1.1.2.0").startswith(".1.3.6.1.4.1.14525.3.1"),
    "snmp_info"             : (".1.3.6.1.4.1.14525.4", [
                                    "5.1.1.1", # number of active access points
                                    "4.1.1.4", # number of sessions on active access points
                              ]),
}
