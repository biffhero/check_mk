#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2013             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

def check_fan(rpm, params):
    if type(params) == tuple:
        params = { "lower" : params }

    warn, crit = params["lower"]
    warn_upper, crit_upper = params.get("upper", (None, None))
    message = "Speed at %d RPM" % rpm
    levelstext = " (warn/crit below %s/%s RPM)" % (warn, crit)
    if warn_upper and crit_upper:
        levelstext = levelstext[:-1] + \
            " and at or above %s/%s RPM)" % (warn_upper, crit_upper)

    perfdata = [ ("fan", rpm, warn, crit, warn_upper, crit_upper)]

    # Note that None < int
    if rpm < crit or crit_upper != None and rpm >= crit_upper:
        message += levelstext
        return 2, message, perfdata
    elif rpm < warn or warn_upper != None and rpm >= warn_upper:
        message += levelstext
        return 1, message, perfdata
    else:
        return 0, message, perfdata
