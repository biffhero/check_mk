#!usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2015             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.


fortigate_ipsecvpn_default_levels = (1, 2)


def inventory_fortigate_ipsecvpn(info):
    if len(info) > 0:
        return [(None, "fortigate_ipsecvpn_default_levels")]


def check_fortigate_ipsecvpn(item, params, info):
    ent_status_map = {
        "1": "down",
        "2": "up"
    }

    warn, crit = params

    tunnels_down = [p2name for p2name, ent_status in info
                    if ent_status_map[ent_status] == "down"]

    num_down  = len(tunnels_down)
    num_total = len(info)
    num_up    = num_total - num_down

    if num_down >= crit:
        status = 2
    elif num_down >= warn:
        status = 1
    else:
        status = 0

    infotext = "Active/Configured: %d/%d" % (num_total - num_down, num_total)
    if tunnels_down:
        infotext += ", down: " + ", ".join(tunnels_down)

    return status, infotext, [('active_vpn_tunnels', num_up, '', '', 0, num_total)]


check_info["fortigate_ipsecvpn"] = {
    "inventory_function"  : inventory_fortigate_ipsecvpn,
    "check_function"      : check_fortigate_ipsecvpn,
    "service_description" : "VPN IPSec Tunnels",
    "has_perfdata"        : True,
    "snmp_scan_function"  : lambda oid: ".1.3.6.1.4.1.12356.101.1" in oid(".1.3.6.1.2.1.1.2.0"),
    "snmp_info"           : (".1.3.6.1.4.1.12356.101.12.2.2.1", [3,     # fgVpnTunEntPhase2Name
                                                                 20]),  # fgVpnTunEntStatus
}

