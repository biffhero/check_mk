#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2013             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

sansymphony_pool_default_values = (80, 90)

def inventory_sansymphony_pool(info):
    for line in info:
        yield line[0], "sansymphony_pool_default_values"

def check_sansymphony_pool(item, params, info):
    warn, crit = params
    for poolname, allocated, poolstatus, cachemode, pooltype in info:
        if poolname == item:
            if poolstatus == "Running" and cachemode == "ReadWrite":
                yield 0, "%s pool %s is running, its cache is in %s mode" % (pooltype, poolname, cachemode)
	    elif poolstatus == "Running" and cachemode != "ReadWrite":
                yield 1, "%s Pool %s is %s, its cache is %s" % (pooltype, poolname, poolstatus, cachemode)
            else:
                yield 2, "%s pool %s is %s, its cache is in %s mode" % (pooltype, poolname, poolstatus, cachemode)

            allocated = int(allocated)
            infotxt = "Pool allocation: %d%%"  % allocated
            levels = " (warn/crit at %d/%d%%)" % (warn, crit)
            perfdata = [("pool_allocation", allocated, warn, crit)]

            if allocated >= crit:
                yield 2, infotxt + levels, perfdata
            elif allocated >= warn:
                yield 1, infotxt + levels, perfdata
            else:
                yield 0, infotxt, perfdata


check_info['sansymphony_pool'] = {
    "check_function"          : check_sansymphony_pool,
    "inventory_function"      : inventory_sansymphony_pool,
    "service_description"     : "sansymphony Pool %s",
    "has_perfdata"            : True,
    "group"                   : "sansymphony_pool",
}
