#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# 1.3.6.1.4.1.9.9.392.1.3.35.0 crasSVCNumSessions
# The number of currently active SVC sessions.

cisco_asa_svc_default_levels = ( 20, 25 )

def inventory_cisco_asa_svcsessions(info):
    return [ (None, "cisco_asa_svc_default_levels") ]


def check_cisco_asa_svcsessions(_no_item, params, info):
    num_sessions = int(info[0][0])
    warn, crit = params
    perfdata = [("active", num_sessions, warn, crit )]
    message = "Currently %d Sessions" % num_sessions
    levels = " (Warn/ Crit at %d/%d)" % ( warn, crit)
    if num_sessions >= crit:
        return 2, message + levels, perfdata
    elif num_sessions >= warn:
        return 1, message + levels, perfdata
    else:
        return 0, message, perfdata

check_info["cisco_asa_svcsessions"]  = {
    "check_function"     : check_cisco_asa_svcsessions,
    "inventory_function" : inventory_cisco_asa_svcsessions,
    "service_description": "SVC Sessions",
    "has_perfdata"       : True,
    "snmp_scan_function" : lambda oid: oid(".1.3.6.1.2.1.1.1.0").lower().startswith("cisco adaptive security") \
                                       or "cisco pix security" in oid(".1.3.6.1.2.1.1.1.0").lower(),
    "snmp_info"          : (".1.3.6.1.4.1.9.9.392.1.3", [ 35 ]),
    "group"              : "asa_svc_sessions",
}
