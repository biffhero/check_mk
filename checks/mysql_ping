#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# <<<mysql_ping>>>
# [[instance]]
# mysqladmin: connect to server at 'localhost' failed
# error: 'Access denied for user 'root'@'localhost' (using password: NO)'
#
# parsed = {
#   "instance1" : [ "mysqld is alive" ],
#   "instance2" : [ "mysqladmin: connect to server at 'localhost' failed",
#                   "error: 'Access denied for user 'root'@'localhost' (using password: NO)'" ]
# }

# FIXME: Crapy copy n paste! Consolidate with other mysql_* parse functions
def parse_mysql_ping(info):
    parsed = {}
    instance = False
    for line in info:
        if line[0].startswith("[["):
            instance = line[0][2:-2]
            if instance == "":
                instance = "mysql"
            parsed[instance] = []
        elif instance:
            parsed[instance].append(" ".join(line))

    # Support for the old plugin version without instances
    if not instance:
        parsed['mysql'] = [ " ".join(x) for x in info ]

    return parsed


def inventory_mysql_ping(parsed):
    for instance in parsed.keys():
        yield instance, None


def check_mysql_ping(item, _no_params, parsed):
    if item in parsed:
        message = parsed[item][0]
        if message == "mysqld is alive":
            return 0, "MySQL Deamon is alive"
        else:
            return 2, message


check_info['mysql_ping'] = {
    "parse_function"          : parse_mysql_ping,
    "inventory_function"      : inventory_mysql_ping,
    "check_function"          : check_mysql_ping,
    "service_description"     : "MySQL Instance %s",
}

