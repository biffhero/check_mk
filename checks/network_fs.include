#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.


# <<<...mounts>>>
# /foobar hanging 0 0 0 0
# /with spaces ok 217492 123563 112515 524288


def inventory_network_fs_mounts(info):
    return [ (" ".join(line[:-5]), None) for line in info ]


def check_network_fs_mounts(item, params, info):
    for line in info:
        mountpoint = " ".join(line[:-5])
        if mountpoint == item:
            # On some operating systems there is no information about
            # used and free space, but just dashes (e.g. AIX)
            if line[-4] == '-':
                if line[-5] == 'ok':
                   return 0, "mount seems OK"
                else:
                   return 2, "Server not responding"

            size_blocks = int(line[-4])
            free_blocks = int(line[-2]) # for non-root user
            blocksize   = int(line[-1])

            if size_blocks <= 0 or free_blocks < 0 or blocksize > 1024*1024:
                return 2, "Stale fs handle"

            size_bytes = size_blocks * blocksize
            free_bytes = free_blocks * blocksize
            used_bytes = size_bytes - free_bytes
            used_perc  = 100.0 * used_bytes / size_bytes
            perfdata   = None
            if params is not None and params.get("has_perfdata"):
                perfdata = [("fs_size", size_bytes), ("fs_used", used_bytes)]

            if line[-5] == 'ok':
                if size_bytes == 0:
                    return 0, "server is responding", perfdata

                return 0, "%.1f%% used (%s of %s)" % \
                          (used_perc, get_bytes_human_readable(used_bytes),
                           get_bytes_human_readable(size_bytes)), perfdata

            else:
                return 2, "server not responding", perfdata

    return 3, "not mounted"
