#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# ------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# ------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# <<<mongodb_locks>>>
# activeClients readers 0
# activeClients total 53
# activeClients writers 0
# currentQueue readers 0
# currentQueue total 32
# currentQueue writers 5

def inventory_mongodb_locks(info):
    return [(None, {})]

def check_mongodb_locks(_no_item, params, info):
    for line in info:
        what, name, count = line
        count = int(count)
        param_name = what.startswith("active") and "clients" or "queue"
        warn, crit = None, None
        state      = 0
        if "%s_%s_locks" % (param_name, name) in params:
            warn, crit = params["%s_%s_locks" % (param_name, name)]
            if count >= crit:
                state = 2
            elif count >= warn:
                state = 1
        yield state, "%s-%s: %s" % (param_name.title(), name.title(), count), [("%s_%s_locks" % (param_name, name), count, warn, crit)]

check_info['mongodb_locks'] = {
    "inventory_function"      : inventory_mongodb_locks,
    "check_function"          : check_mongodb_locks,
    "service_description"     : "MongoDB Locks",
    "group"                   : "mongodb_locks",
    "has_perfdata"            : True,
}
