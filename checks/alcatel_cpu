#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

alcatel_cpu_default_levels = (90.0, 95.0)

def inventory_alcatel_cpu(info):
    return [(None, "alcatel_cpu_default_levels")]

def check_alcatel_cpu(_no_item, params, info):
    cpu_perc = int(info[0][0])
    warn, crit = params
    state = 0
    levelstext = ""
    if cpu_perc >= crit:
        state = 2
    elif cpu_perc >= warn:
        state = 1
    if state:
        levelstext = " (warn/crit at %.1f%%/%.1f%%)" % (warn, crit)
    perfdata = [ ("util", cpu_perc, warn, crit, 0, 100) ]
    return state, "total: %.1f%%" % cpu_perc + levelstext, perfdata

check_info["alcatel_cpu"] = {
    "check_function"        : check_alcatel_cpu,
    "inventory_function"    : inventory_alcatel_cpu,
    "service_description"   : "CPU utilization",
    "has_perfdata"          : True,
    "snmp_scan_function"    : lambda oid: oid(".1.3.6.1.2.1.1.2.0").startswith(".1.3.6.1.4.1.6486.800"),
    "snmp_info"             : (".1.3.6.1.4.1.6486.800.1.2.1.16.1.1.1", [13]),
}

