#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2013             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

factory_settings["synology_update_levels"] = {
    "ok_states"     : [ 2 ],
    "warn_states"   : [ 5 ],
    "crit_states"    : [ 1, 4 ],
}

def inventory_synology_update(info):
    return [(None, {})]

def check_synology_update(_no_item, params, info):
    states = {
       1 : "Available",
       2 : "Unavailable",
       3 : "Connection",
       4 : "Disconnected",
       5 : "Others",
    }
    version, device_state = info[0]
    device_state = int(device_state)
    state = 3
    if device_state in params['ok_states']:
        state = 0
    elif device_state in params['warn_states']:
        state = 1
    elif device_state in params['crit_states']:
        state = 2
    elif device_state == 3:
        # to prevent flapping between update avail and Connection
        raise MKCounterWrapped("Devices try to connect to the update server")
    return state, "Update Status: %s, Current Version: %s" % (states[device_state], version)

check_info["synology_update"] = {
    "check_function"          : check_synology_update,
    "inventory_function"      : inventory_synology_update,
    "service_description"     : "Update",
    "snmp_scan_function"      : synology_scan_function,
    "snmp_info"               : (".1.3.6.1.4.1.6574.1.5", [
                                                 3, #Version
                                                 4, #Status
                                              ]),
    "includes"                : [ "synology.include" ],
    "default_levels_variable" : "synology_update_levels",
    "group"                   : "synology_update",
}

