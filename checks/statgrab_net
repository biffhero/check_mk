#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.


def parse_statgrab_net(info):
    nics = {}
    for nic_varname, value in info:
        nic_id, varname = nic_varname.split(".")
        nics.setdefault(nic_id, {})[varname] = value

    # Now create a table that is compatible if if64
    if_table = []
    for nr, (nic_id, nic) in enumerate(nics.items()):
        is_lo = nic_id.startswith("lo")
        if_table.append([
            str(nr + 1),                             # ifIndex
            nic_id,                                  # ifDescr
            is_lo and '24' or '6',                   # ifType
            str(int(nic.get("speed", 0)) * 1000000), # ifSpeed
            nic.get("up") == 'true' and '1' or '2',  # ifOperStatus
            nic.get("rx", "0"),                      # ifInOctets
            nic.get("ipackets", "0"),                # inucast
            "0",                                     # inmcast
            "0",                                     # inbcast
            "0",                                     # ifInDiscards
            nic.get("ierrors", "0"),                 # ifInErrors
            nic.get("tx", "0"),                      # ifOutOctets
            nic.get("opackets", "0"),                # outucast
            "0",                                     # outmcast
            "0",                                     # outbcast
            nic.get("collisions", "0"),              # ifOutDiscards
            nic.get("oerrors", "0"),                 # ifOutErrors
            "0",                                     # ifOutQLen
            nic.get("interface_name", nic_id),       # ifAlias
            "",                                      # ifPhysAddress
        ])

    return if_table


check_info["statgrab_net"] = {
    'parse_function'          : parse_statgrab_net,
    'inventory_function'      : lambda parsed: inventory_if_common(parsed, False),
    'check_function'          : check_if_common,
    'service_description'     : 'Interface %s',
    'has_perfdata'            : True,
    'group'                   : 'if',
    'default_levels_variable' : 'if_default_levels',
    'includes'                : [ 'if.include' ],
}

